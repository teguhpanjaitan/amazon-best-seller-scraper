<?php
$this->headLink()->appendStylesheet('https://cdn.datatables.net/1.10.20/css/jquery.dataTables.css');
$this->headScript()->appendFile("https://cdn.datatables.net/1.10.20/js/jquery.dataTables.js", 'text/javascript')
    ->appendFile("https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js", 'text/javascript');
?>
<br>
<div class="jumbotron">
    <h2>Scraper <span class="zf-green">Data</span></h2>

    <table id="products" class="display">
        <thead>
            <tr>
                <th>BSR</th>
                <th>Trend</th>
                <th>ASIN</th>
                <th>Product Title</th>
                <th>Price</th>
                <th>Ratings</th>
                <th>Average Rating</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<?php
$productsTable = $this->url('application', ['action' => 'productsTable']);

$this->inlineScript()->captureStart();
echo <<<JS
var productsTable = "$productsTable";

$(document).ready(function () {
    $('#products').DataTable({
        processing: false,
        serverSide: true,
        searching: true,
        bInfo: false,
        "lengthChange": false,
        "order": [[0, "asc"]],
        "columnDefs": [{ "orderable": false, "targets": 1 }],
        ajax: {
            url: productsTable,
            type: "GET"
        },
        "drawCallback": function () {
            handleChart();
        }
    });
});

function handleChart(){
    $("#products tbody tr td:nth-child(2)").each(function () {
        var data = $(this).children(".data").html();
        var element = $(this).children(".chart");
        data = JSON.parse(data);
        showChart(element,data);
    });
}

function showChart(element,dataset){
    if(dataset.length <= 1){
        return;
    }

    var labels = [];
    var count = 0;
    dataset.forEach(function(item){
        labels.push(count);
        count++;
    });

    new Chart(element, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: '# of Votes',
                data: dataset,
                borderWidth: 1
            }]
        },
        options: {
            elements: {
                point: {
                    radius: 0
                }
            },
            legend: {
                display: false,
            },
            scales: {
                yAxes: [{
                    gridLines: {
                        drawBorder: false,
                    },
                    ticks: {
                        display: false
                    }
                }],
                xAxes: [{
                    gridLines: {
                        display: false,
                    },
                    ticks: {
                        display: false
                    }
                }],
            },
        }
    });
}
JS;
$this->inlineScript()->captureEnd();
